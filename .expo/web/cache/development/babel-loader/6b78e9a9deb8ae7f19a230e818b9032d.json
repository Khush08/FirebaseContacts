{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Repository\\\\Self\\\\React-native\\\\ReactNative8\\\\FirebaseContact\\\\screens\\\\AddScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Form, Button, Item, Label, Input } from 'native-base';\nimport * as firebase from 'firebase';\nimport 'expo-random';\nimport { nanoid } from 'nanoid/async/index';\nimport * as ImagePicker from 'expo-image-picker';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nYellowBox.ignoreWarnings(['Setting a timer']);\n\nfunction AddScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fname = _useState2[0],\n      setfname = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lname = _useState4[0],\n      setlname = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setphone = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setemail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      addr = _useState10[0],\n      setaddr = _useState10[1];\n\n  var _useState11 = useState('empty'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      uploading = _useState14[0],\n      setUpload = _useState14[1];\n\n  var _useState15 = useState('empty'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      url = _useState16[0],\n      setUrl = _useState16[1];\n\n  saveContact = function saveContact() {\n    var databaseRef, storageRef, imgDownloadUrl, contact;\n    return _regeneratorRuntime.async(function saveContact$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(fname !== '' && lname !== '' && phone !== '' && email !== '' && addr !== '')) {\n              _context.next = 12;\n              break;\n            }\n\n            setUpload(true);\n            databaseRef = firebase.database().ref(\"Contacts\");\n            storageRef = firebase.storage().ref();\n\n            if (!(image !== 'empty')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(UploadImg(image, storageRef));\n\n          case 7:\n            imgDownloadUrl = _context.sent;\n            setUrl(imgDownloadUrl);\n\n          case 9:\n            contact = {\n              fname: fname,\n              lname: lname,\n              phone: phone,\n              email: email,\n              addr: addr,\n              imageUrl: url\n            };\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(databaseRef.push(contact).then(function () {\n              return navigation.goBack();\n            }).catch(function (error) {\n              return alert(error.message);\n            }));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  takePicture = function takePicture() {\n    var result;\n    return _regeneratorRuntime.async(function takePicture$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              quality: 0.2,\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              base64: true,\n              aspect: [1, 1]\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  UploadImg = function UploadImg(uri, storageRef) {\n    var parts, fileExtension, blob, ref, snapShot;\n    return _regeneratorRuntime.async(function UploadImg$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            parts = uri.split('.');\n            fileExtension = parts[parts.length - 1];\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function (error) {\n                reject(new TypeError('Network Connection Failed'));\n              };\n\n              xhr.responseType = 'blob';\n              xhr.open('GET', uri, true);\n              xhr.send(null);\n            }));\n\n          case 4:\n            blob = _context3.sent;\n            _context3.t0 = storageRef.child('ContactImages');\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(nanoid(10));\n\n          case 8:\n            _context3.t1 = _context3.sent;\n            _context3.t2 = _context3.t1 + '.';\n            _context3.t3 = fileExtension;\n            _context3.t4 = _context3.t2 + _context3.t3;\n            ref = _context3.t0.child.call(_context3.t0, _context3.t4);\n            _context3.next = 15;\n            return _regeneratorRuntime.awrap(ref.put(blob));\n\n          case 15:\n            snapShot = _context3.sent;\n            blob.close();\n            _context3.next = 19;\n            return _regeneratorRuntime.awrap(snapShot.ref.getDownloadURL());\n\n          case 19:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (uploading) {\n    return React.createElement(View, {\n      style: styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#61DAFB',\n        marginBottom: 10,\n        alignSelf: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Saving Contact...\"), React.createElement(ActivityIndicator, {\n      color: \"#61DAFB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: styles.Container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    style: {\n      width: '100%'\n    },\n    onPressIn: function onPressIn() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.img,\n    onPress: function onPress() {\n      return takePicture();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.imgHolder,\n    source: image === 'empty' ? require(\"../assets/logo.png\") : {\n      uri: image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }))), React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: (styles.addcontainer, {\n      width: '97%'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(Item, {\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    style: styles.addLbl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"First Name\"), React.createElement(Input, {\n    style: styles.addInput,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    keyboardType: \"default\",\n    keyboardAppearance: \"dark\",\n    onChangeText: function onChangeText(fname) {\n      return setfname(fname);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    style: styles.addLbl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), React.createElement(Input, {\n    style: styles.addInput,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    keyboardType: \"default\",\n    keyboardAppearance: \"dark\",\n    onChangeText: function onChangeText(lname) {\n      return setlname(lname);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    style: styles.addLbl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Contact Number\"), React.createElement(Input, {\n    style: styles.addInput,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    keyboardType: \"number-pad\",\n    keyboardAppearance: \"dark\",\n    maxLength: 10,\n    onChangeText: function onChangeText(phone) {\n      return setphone(phone);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    style: styles.addLbl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Email\"), React.createElement(Input, {\n    style: styles.addInput,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    keyboardType: \"email-address\",\n    keyboardAppearance: \"dark\",\n    onChangeText: function onChangeText(email) {\n      return setemail(email);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    style: styles.addLbl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Address\"), React.createElement(Input, {\n    style: styles.addInput,\n    autoCorrect: false,\n    autoCompleteType: \"off\",\n    autoCapitalize: \"none\",\n    keyboardType: \"default\",\n    keyboardAppearance: \"dark\",\n    onChangeText: function onChangeText(addr) {\n      return setaddr(addr);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }))), React.createElement(Button, {\n    block: true,\n    style: {\n      marginTop: 20,\n      backgroundColor: '#61DAFB',\n      marginHorizontal: 25\n    },\n    onPress: function onPress() {\n      return saveContact();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, \"Save Contact\")))));\n}\n\nexport default AddScreen;\nvar styles = StyleSheet.create({\n  Container: {\n    flex: 1,\n    backgroundColor: '#282A36',\n    alignContent: 'center',\n    justifyContent: 'center'\n  },\n  img: {\n    width: 108,\n    height: 108,\n    borderRadius: 108 / 2,\n    borderColor: '#61DAFB',\n    borderWidth: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 2,\n    alignSelf: 'center'\n  },\n  imgHolder: {\n    width: 100,\n    height: 100,\n    borderRadius: 100 / 2\n  },\n  addLbl: {\n    color: '#fff'\n  },\n  addInput: {\n    width: 100,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Repository/Self/React-native/ReactNative8/FirebaseContact/screens/AddScreen.js"],"names":["React","useState","useEffect","Form","Button","Item","Label","Input","firebase","nanoid","ImagePicker","TouchableWithoutFeedback","YellowBox","ignoreWarnings","AddScreen","navigation","fname","setfname","lname","setlname","phone","setphone","email","setemail","addr","setaddr","image","setImage","uploading","setUpload","url","setUrl","saveContact","databaseRef","database","ref","storageRef","storage","UploadImg","imgDownloadUrl","contact","imageUrl","push","then","goBack","catch","error","alert","message","takePicture","launchImageLibraryAsync","quality","mediaTypes","MediaTypeOptions","All","allowsEditing","base64","aspect","result","cancelled","uri","parts","split","fileExtension","length","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","child","put","snapShot","close","getDownloadURL","styles","Container","color","marginBottom","alignSelf","width","Keyboard","dismiss","img","imgHolder","require","addcontainer","addLbl","addInput","marginTop","backgroundColor","marginHorizontal","StyleSheet","create","flex","alignContent","justifyContent","height","borderRadius","borderColor","borderWidth","alignItems","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;;AAEA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,KAAnC,QAA+C,aAA/C;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,aAAP;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAASC,wBAAT,QAAyC,8BAAzC;AAEAC,SAAS,CAACC,cAAV,CAAyB,CAAC,iBAAD,CAAzB;;AAEA,SAASC,SAAT,OAAgC;AAAA,MAAZC,UAAY,QAAZA,UAAY;;AAAA,kBACFd,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,MACrBe,KADqB;AAAA,MACdC,QADc;;AAAA,mBAEFhB,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,MAErBiB,KAFqB;AAAA,MAEdC,QAFc;;AAAA,mBAGFlB,QAAQ,CAAC,EAAD,CAHN;AAAA;AAAA,MAGrBmB,KAHqB;AAAA,MAGdC,QAHc;;AAAA,mBAIFpB,QAAQ,CAAC,EAAD,CAJN;AAAA;AAAA,MAIrBqB,KAJqB;AAAA,MAIdC,QAJc;;AAAA,mBAKJtB,QAAQ,CAAC,EAAD,CALJ;AAAA;AAAA,MAKrBuB,IALqB;AAAA,MAKfC,OALe;;AAAA,oBAMFxB,QAAQ,CAAC,OAAD,CANN;AAAA;AAAA,MAMrByB,KANqB;AAAA,MAMdC,QANc;;AAAA,oBAOG1B,QAAQ,CAAC,KAAD,CAPX;AAAA;AAAA,MAOrB2B,SAPqB;AAAA,MAOVC,SAPU;;AAAA,oBAQN5B,QAAQ,CAAC,OAAD,CARF;AAAA;AAAA,MAQrB6B,GARqB;AAAA,MAQhBC,MARgB;;AAU5BC,EAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACNhB,KAAK,KAAK,EAAX,IAAmBE,KAAK,KAAK,EAA7B,IAAqCE,KAAK,KAAK,EAA/C,IAAuDE,KAAK,KAAK,EAAjE,IAAyEE,IAAI,KAAK,EAD3E;AAAA;AAAA;AAAA;;AAENK,YAAAA,SAAS,CAAC,IAAD,CAAT;AACMI,YAAAA,WAHA,GAGczB,QAAQ,CAAC0B,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,CAHd;AAIAC,YAAAA,UAJA,GAIa5B,QAAQ,CAAC6B,OAAT,GAAmBF,GAAnB,EAJb;;AAAA,kBAKHT,KAAK,KAAK,OALP;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAM2BY,SAAS,CAACZ,KAAD,EAAQU,UAAR,CANpC;;AAAA;AAMIG,YAAAA,cANJ;AAOFR,YAAAA,MAAM,CAACQ,cAAD,CAAN;;AAPE;AASFC,YAAAA,OATE,GASQ;AACVxB,cAAAA,KAAK,EAAEA,KADG;AAEVE,cAAAA,KAAK,EAAEA,KAFG;AAGVE,cAAAA,KAAK,EAAEA,KAHG;AAIVE,cAAAA,KAAK,EAAEA,KAJG;AAKVE,cAAAA,IAAI,EAAEA,IALI;AAMViB,cAAAA,QAAQ,EAAEX;AANA,aATR;AAAA;AAAA,6CAiBAG,WAAW,CAACS,IAAZ,CAAiBF,OAAjB,EACLG,IADK,CACA;AAAA,qBAAM5B,UAAU,CAAC6B,MAAX,EAAN;AAAA,aADA,EAELC,KAFK,CAEC,UAAAC,KAAK;AAAA,qBAAIC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAT;AAAA,aAFN,CAjBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAuBAC,EAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQvC,WAAW,CAACwC,uBAAZ,CAAoC;AAClDC,cAAAA,OAAO,EAAE,GADyC;AAElDC,cAAAA,UAAU,EAAE1C,WAAW,CAAC2C,gBAAZ,CAA6BC,GAFS;AAGlDC,cAAAA,aAAa,EAAE,IAHmC;AAIlDC,cAAAA,MAAM,EAAE,IAJ0C;AAKlDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAL0C,aAApC,CADR;;AAAA;AACNC,YAAAA,MADM;;AAQV,gBAAG,CAACA,MAAM,CAACC,SAAX,EAAqB;AACjBhC,cAAAA,QAAQ,CAAC+B,MAAM,CAACE,GAAR,CAAR;AACH;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAaAtB,EAAAA,SAAS,GAAG,mBAAOsB,GAAP,EAAYxB,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACFyB,YAAAA,KADE,GACMD,GAAG,CAACE,KAAJ,CAAU,GAAV,CADN;AAEFC,YAAAA,aAFE,GAEcF,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAFnB;AAAA;AAAA,6CAGW,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChD,kBAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;;AACAD,cAAAA,GAAG,CAACE,MAAJ,GAAa,YAAW;AAAEJ,gBAAAA,OAAO,CAACE,GAAG,CAACG,QAAL,CAAP;AAAuB,eAAjD;;AACAH,cAAAA,GAAG,CAACI,OAAJ,GAAc,UAAS1B,KAAT,EAAgB;AAACqB,gBAAAA,MAAM,CAAE,IAAIM,SAAJ,CAAc,2BAAd,CAAF,CAAN;AAAsD,eAArF;;AACAL,cAAAA,GAAG,CAACM,YAAJ,GAAmB,MAAnB;AACAN,cAAAA,GAAG,CAACO,IAAJ,CAAS,KAAT,EAAgBf,GAAhB,EAAqB,IAArB;AACAQ,cAAAA,GAAG,CAACQ,IAAJ,CAAS,IAAT;AACH,aAPkB,CAHX;;AAAA;AAGFC,YAAAA,IAHE;AAAA,2BAWGzC,UAAU,CAAC0C,KAAX,CAAiB,eAAjB,CAXH;AAAA;AAAA,6CAWiDrE,MAAM,CAAC,EAAD,CAXvD;;AAAA;AAAA;AAAA,0CAW8D,GAX9D;AAAA,2BAWoEsD,aAXpE;AAAA;AAWF5B,YAAAA,GAXE,gBAWqC2C,KAXrC;AAAA;AAAA,6CAYe3C,GAAG,CAAC4C,GAAJ,CAAQF,IAAR,CAZf;;AAAA;AAYFG,YAAAA,QAZE;AAaRH,YAAAA,IAAI,CAACI,KAAL;AAbQ;AAAA,6CAcKD,QAAQ,CAAC7C,GAAT,CAAa+C,cAAb,EAdL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAiBA,MAAGtD,SAAH,EAAa;AACT,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAIuD,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAI;AAACC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,YAAY,EAAE,EAAjC;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAG,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIJ,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,wBAAD;AAA0B,IAAA,KAAK,EAAI;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAnC;AAAoD,IAAA,SAAS,EAAI;AAAA,aAAMC,QAAQ,CAACC,OAAT,EAAN;AAAA,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIP,MAAM,CAACQ,GAAlC;AAAuC,IAAA,OAAO,EAAI;AAAA,aAAM1C,WAAW,EAAjB;AAAA,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACA,IAAA,KAAK,EAAIkC,MAAM,CAACS,SADhB;AAEA,IAAA,MAAM,EACFlE,KAAK,KAAK,OAAV,GAAmBmE,OAAO,sBAA1B,GAAmD;AAACjC,MAAAA,GAAG,EAAGlC;AAAP,KAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAWI,oBAAC,oBAAD;AAAsB,IAAA,OAAO,MAA7B;AAA8B,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE;AAAR,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,GAAEL,MAAM,CAACW,YAAP,EAAqB;AAACN,MAAAA,KAAK,EAAE;AAAR,KAAvB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIL,MAAM,CAACY,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIZ,MAAM,CAACa,QAAvB;AACA,IAAA,WAAW,EAAI,KADf;AAEA,IAAA,cAAc,EAAG,MAFjB;AAGA,IAAA,gBAAgB,EAAG,KAHnB;AAIA,IAAA,YAAY,EAAG,SAJf;AAKA,IAAA,kBAAkB,EAAG,MALrB;AAMA,IAAA,YAAY,EAAK,sBAAAhF,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,EAYI,oBAAC,IAAD;AAAM,IAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAImE,MAAM,CAACY,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIZ,MAAM,CAACa,QAAvB;AACA,IAAA,WAAW,EAAI,KADf;AAEA,IAAA,cAAc,EAAG,MAFjB;AAGA,IAAA,gBAAgB,EAAG,KAHnB;AAIA,IAAA,YAAY,EAAG,SAJf;AAKA,IAAA,kBAAkB,EAAG,MALrB;AAMA,IAAA,YAAY,EAAK,sBAAA9E,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAZJ,EAuBI,oBAAC,IAAD;AAAM,IAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIiE,MAAM,CAACY,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAEA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIZ,MAAM,CAACa,QAAvB;AACA,IAAA,WAAW,EAAI,KADf;AAEA,IAAA,cAAc,EAAG,MAFjB;AAGA,IAAA,gBAAgB,EAAG,KAHnB;AAIA,IAAA,YAAY,EAAG,YAJf;AAKA,IAAA,kBAAkB,EAAG,MALrB;AAMA,IAAA,SAAS,EAAI,EANb;AAOA,IAAA,YAAY,EAAK,sBAAA5E,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAvBJ,EAmCI,oBAAC,IAAD;AAAM,IAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAI+D,MAAM,CAACY,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAEA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIZ,MAAM,CAACa,QAAvB;AACA,IAAA,WAAW,EAAI,KADf;AAEA,IAAA,cAAc,EAAG,MAFjB;AAGA,IAAA,gBAAgB,EAAG,KAHnB;AAIA,IAAA,YAAY,EAAG,eAJf;AAKA,IAAA,kBAAkB,EAAG,MALrB;AAMA,IAAA,YAAY,EAAK,sBAAA1E,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAnCJ,EA8CI,oBAAC,IAAD;AAAM,IAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAI6D,MAAM,CAACY,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIZ,MAAM,CAACa,QAAvB;AACA,IAAA,WAAW,EAAI,KADf;AAEA,IAAA,gBAAgB,EAAG,KAFnB;AAGA,IAAA,cAAc,EAAG,MAHjB;AAIA,IAAA,YAAY,EAAG,SAJf;AAKA,IAAA,kBAAkB,EAAG,MALrB;AAMA,IAAA,YAAY,EAAK,sBAAAxE,IAAI;AAAA,aAAIC,OAAO,CAACD,IAAD,CAAX;AAAA,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CA9CJ,CADA,EA2DD,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAI;AAAEyE,MAAAA,SAAS,EAAG,EAAd;AAAkBC,MAAAA,eAAe,EAAE,SAAnC;AAA8CC,MAAAA,gBAAgB,EAAG;AAAjE,KAAvB;AACC,IAAA,OAAO,EAAK;AAAA,aAAMnE,WAAW,EAAjB;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHL,CA3DC,CADA,CAXJ,CADJ;AAkFH;;AAED,eAAelB,SAAf;AAEA,IAAMqE,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7BjB,EAAAA,SAAS,EAAG;AACRkB,IAAAA,IAAI,EAAG,CADC;AAERJ,IAAAA,eAAe,EAAG,SAFV;AAGRK,IAAAA,YAAY,EAAG,QAHP;AAIRC,IAAAA,cAAc,EAAG;AAJT,GADiB;AAO7Bb,EAAAA,GAAG,EAAG;AACFH,IAAAA,KAAK,EAAE,GADL;AAEFiB,IAAAA,MAAM,EAAE,GAFN;AAGFC,IAAAA,YAAY,EAAE,MAAI,CAHhB;AAIFC,IAAAA,WAAW,EAAE,SAJX;AAKFC,IAAAA,WAAW,EAAE,CALX;AAMFC,IAAAA,UAAU,EAAE,QANV;AAOFL,IAAAA,cAAc,EAAE,QAPd;AAQFM,IAAAA,OAAO,EAAE,CARP;AASFvB,IAAAA,SAAS,EAAE;AATT,GAPuB;AAkB7BK,EAAAA,SAAS,EAAG;AACRJ,IAAAA,KAAK,EAAE,GADC;AAERiB,IAAAA,MAAM,EAAE,GAFA;AAGRC,IAAAA,YAAY,EAAE,MAAI;AAHV,GAlBiB;AAuB7BX,EAAAA,MAAM,EAAG;AACLV,IAAAA,KAAK,EAAG;AADH,GAvBoB;AA0B7BW,EAAAA,QAAQ,EAAG;AACPR,IAAAA,KAAK,EAAE,GADA;AAEPH,IAAAA,KAAK,EAAE;AAFA;AA1BkB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {YellowBox, StyleSheet, View, Text, TouchableOpacity, Keyboard, ActivityIndicator, Image, KeyboardAvoidingView} from 'react-native';\r\nimport {Form, Button, Item, Label, Input} from 'native-base';\r\nimport * as firebase from 'firebase';\r\nimport 'expo-random';\r\nimport {nanoid} from 'nanoid/async/index'\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\n\r\nYellowBox.ignoreWarnings(['Setting a timer']);\r\n\r\nfunction AddScreen({navigation}){\r\n    const [fname, setfname] = useState('');\r\n    const [lname, setlname] = useState('');\r\n    const [phone, setphone] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [addr, setaddr] = useState('');\r\n    const [image, setImage] = useState('empty');\r\n    const [uploading, setUpload] = useState(false);\r\n    const [url, setUrl] = useState('empty');\r\n    \r\n    saveContact = async () =>{\r\n        if((fname !== '') && (lname !== '') && (phone !== '') && (email !== '') && (addr !== '')){\r\n            setUpload(true);\r\n            const databaseRef = firebase.database().ref(\"Contacts\");\r\n            const storageRef = firebase.storage().ref();\r\n            if(image !== 'empty'){\r\n                const imgDownloadUrl = await UploadImg(image, storageRef);\r\n                setUrl(imgDownloadUrl)\r\n            }\r\n            var contact = {\r\n                fname: fname,\r\n                lname: lname,\r\n                phone: phone,\r\n                email: email,\r\n                addr: addr,\r\n                imageUrl: url\r\n            }\r\n            await databaseRef.push(contact)\r\n            .then(() => navigation.goBack())\r\n            .catch(error => alert(error.message));\r\n        }\r\n    }\r\n\r\n    takePicture = async () =>{\r\n        let result =await ImagePicker.launchImageLibraryAsync({\r\n            quality: 0.2,\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            base64: true,\r\n            aspect: [1, 1]\r\n        });\r\n        if(!result.cancelled){\r\n            setImage(result.uri);\r\n        }\r\n    }\r\n\r\n    UploadImg = async (uri, storageRef) => {\r\n        const parts = uri.split('.');\r\n        const fileExtension = parts[parts.length - 1];\r\n        const blob = await new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onload = function() { resolve(xhr.response);}\r\n            xhr.onerror = function(error) {reject( new TypeError('Network Connection Failed') );}\r\n            xhr.responseType = 'blob';\r\n            xhr.open('GET', uri, true);\r\n            xhr.send(null);\r\n        });\r\n        const ref =storageRef.child('ContactImages').child(await nanoid(10) + '.' + fileExtension);\r\n        const snapShot = await ref.put(blob);\r\n        blob.close();\r\n        return await snapShot.ref.getDownloadURL(); \r\n    }\r\n\r\n    if(uploading){\r\n        return (\r\n            <View style = {styles.Container}>\r\n                <Text style = {{color: '#61DAFB', marginBottom: 10, alignSelf: 'center'}}>Saving Contact...</Text>\r\n                <ActivityIndicator color = '#61DAFB' />\r\n            </View>\r\n        );\r\n    }\r\n    return(\r\n        <View style = {styles.Container} > \r\n            <TouchableWithoutFeedback style = {{ width: '100%'}}onPressIn = {() => Keyboard.dismiss()}>\r\n                <TouchableOpacity style = {styles.img} onPress = {() => takePicture()}>\r\n                    <Image \r\n                    style = {styles.imgHolder}\r\n                    source = {\r\n                        image === 'empty'? require('../assets/logo.png') : {uri : image}\r\n                    }\r\n                    />\r\n                </TouchableOpacity>  \r\n            </TouchableWithoutFeedback>\r\n            <KeyboardAvoidingView enabled style = {{width: '100%'}}>\r\n            <View style={styles.addcontainer, {width: '97%'}}>\r\n            <Form>\r\n                <Item floatingLabel>\r\n                <Label style = {styles.addLbl}>First Name</Label>\r\n                <Input style = {styles.addInput}\r\n                autoCorrect = {false}\r\n                autoCapitalize = 'none'\r\n                autoCompleteType = 'off'\r\n                keyboardType = 'default'\r\n                keyboardAppearance = 'dark'\r\n                onChangeText = { fname => setfname(fname)}\r\n                />\r\n                </Item>\r\n                <Item floatingLabel>\r\n                <Label style = {styles.addLbl}>Last Name</Label>\r\n                <Input style = {styles.addInput}\r\n                autoCorrect = {false}\r\n                autoCapitalize = 'none'\r\n                autoCompleteType = 'off'\r\n                keyboardType = 'default'\r\n                keyboardAppearance = 'dark'\r\n                onChangeText = { lname => setlname(lname)}\r\n                />\r\n                </Item>\r\n                <Item floatingLabel>\r\n                <Label style = {styles.addLbl}>Contact Number</Label>\r\n                <Input style = {styles.addInput}\r\n                autoCorrect = {false}\r\n                autoCapitalize = 'none'\r\n                autoCompleteType = 'off'\r\n                keyboardType = 'number-pad'\r\n                keyboardAppearance = 'dark'\r\n                maxLength = {10}\r\n                onChangeText = { phone => setphone(phone)}         \r\n                />\r\n                </Item>\r\n                <Item floatingLabel>\r\n                <Label style = {styles.addLbl}>Email</Label>\r\n                <Input style = {styles.addInput}\r\n                autoCorrect = {false}\r\n                autoCapitalize = 'none'\r\n                autoCompleteType = 'off'\r\n                keyboardType = 'email-address'\r\n                keyboardAppearance = 'dark'\r\n                onChangeText = { email => setemail(email)}          \r\n                />\r\n                </Item>\r\n                <Item floatingLabel>\r\n                <Label style = {styles.addLbl}>Address</Label>\r\n                <Input style = {styles.addInput}\r\n                autoCorrect = {false}\r\n                autoCompleteType = 'off'\r\n                autoCapitalize = 'none'\r\n                keyboardType = 'default'\r\n                keyboardAppearance = 'dark'\r\n                onChangeText = { addr => setaddr(addr)}          \r\n                />\r\n                </Item>\r\n            </Form>\r\n           <Button block style = {{ marginTop : 20, backgroundColor: '#61DAFB', marginHorizontal : 25 }}\r\n            onPress = { () => saveContact()} \r\n            >\r\n                <Text>Save Contact</Text>\r\n            </Button>\r\n            </View>  \r\n            </KeyboardAvoidingView>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nexport default AddScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    Container : {\r\n        flex : 1,\r\n        backgroundColor : '#282A36',\r\n        alignContent : 'center',\r\n        justifyContent : 'center'\r\n    },\r\n    img : {\r\n        width: 108,\r\n        height: 108,\r\n        borderRadius: 108/2,\r\n        borderColor: '#61DAFB',\r\n        borderWidth: 2,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 2, \r\n        alignSelf: 'center'\r\n    },\r\n    imgHolder : {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 100/2,\r\n    },\r\n    addLbl : {\r\n        color : '#fff',\r\n    },\r\n    addInput : {\r\n        width: 100,\r\n        color: 'white',\r\n    }, \r\n})"]},"metadata":{},"sourceType":"module"}